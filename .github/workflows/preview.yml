name: Preview Site

on:
  pull_request:
    branches: [ master, main ]

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup theme
        uses: ./.github/actions/setup-theme

      - name: Build site
        uses: ./.github/actions/hugo-build
        with:
          working-directory: exampleSite

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./exampleSite/public
          destination_dir: preview/pr-${{ github.event.number }}
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/preview/pr-${{ github.event.number }}/`;
            
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('üöÄ **Deploy preview ready!**')
            );
            
            const commentBody = `üöÄ **Deploy preview ready!**
            
            üîó **Preview URL:** ${previewUrl}
            
            üìù **Changes in this PR:**
            ${context.payload.pull_request.title}
            
            ‚è∞ **Preview will be available until PR is closed**
            
            ---
            *This preview was automatically generated by GitHub Actions*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: preview-build-${{ github.event.number }}
          path: exampleSite/public/
          retention-days: 30

      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting 30 seconds for GitHub Pages deployment..."
          sleep 30

      - name: Take screenshot (disabled)
        run: |
          echo "üì∏ Screenshot functionality temporarily disabled"
          echo "Preview URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/preview/pr-${{ github.event.number }}/"

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: preview-screenshots-${{ github.event.number }}
          path: |
            preview-screenshot.png
            preview-viewport.png
            preview-error.png
          retention-days: 7

      - name: Validate preview
        run: |
          echo "üîç Validating preview deployment..."
          preview_url="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/preview/pr-${{ github.event.number }}/"
          
          # Wait a bit more for deployment
          sleep 10
          
          # Check if the preview is accessible
          if curl -f -s "$preview_url" > /dev/null; then
            echo "‚úÖ Preview is accessible at: $preview_url"
          else
            echo "‚ö†Ô∏è Preview might not be ready yet at: $preview_url"
            echo "This is normal for new deployments, check back in a few minutes."
          fi

      - name: Check for broken links in preview
        run: |
          echo "üîç Checking for broken links in preview..."
          preview_url="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/preview/pr-${{ github.event.number }}/"
          
          # Use lychee to check the deployed preview
          if command -v lychee &> /dev/null; then
            lychee --format markdown --exclude mailto: --exclude tel: --exclude file: "$preview_url" || {
              echo "‚ö†Ô∏è Some links in the preview may be broken. Check the lychee output above."
            }
          else
            echo "‚ö†Ô∏è lychee not available, skipping link check"
          fi 